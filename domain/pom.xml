<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.novation</groupId>
		<artifactId>eligibility-parent-pom</artifactId>
		<version>0.1.0.BUILD-SNAPSHOT</version>
		<relativePath>../parent-pom/pom.xml</relativePath>
	</parent>
	<profiles>
		<profile>
			<id>derby</id>
			<build>
				<plugins>
					<!-- Create seeded db zip -->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${eligibility.maven.assembly.plugin.version}</version>
						<executions>
							<execution>
								<id>assemble-seeded-db</id>
								<phase>verify</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/main/assembly/seed.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Install seeded db zip file as a maven artifact -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
						<executions>
							<execution>
								<id>install-seeded-derby-db</id>
								<phase>install</phase>
								<goals>
									<goal>install-file</goal>
								</goals>
								<configuration>
									<file>${project.build.directory}/${eligibility.rdb.derby.seed.artifact.artifactId}-${project.version}-${eligibility.rdb.derby.seed.assembly.suffix}.${eligibility.rdb.derby.seed.assembly.format}</file>
									<groupId>${project.groupId}</groupId>
									<artifactId>${eligibility.rdb.derby.seed.artifact.artifactId}</artifactId>
									<version>${project.version}</version>
									<classifier>${eligibility.rdb.derby.seed.artifact.classifier}</classifier>
									<packaging>${eligibility.rdb.derby.seed.artifact.packaging}</packaging>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sqlserver</id>
		</profile>
		<profile>
			<id>jtds</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>sqlserver-jtds-ping-test-db</id>
								<goals>
									<goal>execute</goal>
								</goals>
							</execution>
							<execution>
								<id>sqlserver-jtds-ping-seed-db</id>
								<goals>
									<goal>execute</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>msjdbc</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>sqlserver-msjdbc-ping-test-db</id>
								<goals>
									<goal>execute</goal>
								</goals>
							</execution>
							<execution>
								<id>sqlserver-msjdbc-ping-seed-db</id>
								<goals>
									<goal>execute</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>oracle</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>oracle-ping-test-db</id>
								<goals>
									<goal>execute</goal>
								</goals>
							</execution>
							<execution>
								<id>oracle-ping-seed-db</id>
								<goals>
									<goal>execute</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>datanucleus</id>
			<properties>
				<eligibility.domain.complete.ddl.properties.file>${project.build.directory}/tool/datanucleus/complete-ddl.${eligibility.db.vendor.id}-${eligibility.db.driver.id}.properties</eligibility.domain.complete.ddl.properties.file>
				<eligibility.domain.complete.test.db.properties.file>${project.build.directory}/tool/datanucleus/complete-test-db.${eligibility.db.vendor.id}-${eligibility.db.driver.id}.properties</eligibility.domain.complete.test.db.properties.file>
				<eligibility.domain.complete.seed.db.properties.file>${project.build.directory}/tool/datanucleus/complete-seed-db.${eligibility.db.vendor.id}-${eligibility.db.driver.id}.properties</eligibility.domain.complete.seed.db.properties.file>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.datanucleus</groupId>
						<artifactId>maven-datanucleus-plugin</artifactId>
						<version>${eligibility.maven-datanucleus-plugin.version}</version>
						<dependencies>
							<dependency>
								<groupId>org.datanucleus</groupId>
								<artifactId>datanucleus-core</artifactId>
								<version>${eligibility.datanucleus-core.version}</version>
								<scope>runtime</scope>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>enhance</id>
								<phase>process-classes</phase>
								<goals>
									<goal>enhance</goal>
								</goals>
								<configuration>
									<mappingIncludes>**/*.class</mappingIncludes>
									<api>JPA</api>
									<verbose>true</verbose>
									<fork>false</fork>
								</configuration>
							</execution>
							<execution>
								<id>generate-complete-ddl</id>
								<phase>process-classes</phase>
								<goals>
									<goal>schema-create</goal>
								</goals>
								<configuration>
									<mappingIncludes>**/*.class</mappingIncludes>
									<api>JPA</api>
									<!-- verbose>true</verbose -->
									<props>${eligibility.domain.complete.ddl.properties.file}</props>
									<fork>false</fork>
									<completeDdl>true</completeDdl>
									<ddlFile>${project.build.directory}/complete.datanucleus-${eligibility.db.vendor.id}-${eligibility.db.driver.id}.ddl</ddlFile>
								</configuration>
							</execution>
							<execution>
								<id>generate-complete-test-db</id>
								<phase>process-classes</phase>
								<goals>
									<goal>schema-deletecreate</goal>
								</goals>
								<configuration>
									<mappingIncludes>**/*.class</mappingIncludes>
									<api>JPA</api>
									<!-- verbose>true</verbose -->
									<props>${eligibility.domain.complete.test.db.properties.file}</props>
									<fork>false</fork>
									<completeDdl>true</completeDdl>
								</configuration>
							</execution>
							<execution>
								<id>generate-complete-seed-db</id>
								<phase>process-classes</phase>
								<goals>
									<goal>schema-deletecreate</goal>
								</goals>
								<configuration>
									<mappingIncludes>**/*.class</mappingIncludes>
									<api>JPA</api>
									<!-- verbose>true</verbose -->
									<props>${eligibility.domain.complete.seed.db.properties.file}</props>
									<fork>false</fork>
									<completeDdl>true</completeDdl>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>hibernate</id>
			<properties>
				<eligibility.domain.complete.ddl.properties.file>${project.build.directory}/tool/hibernate/complete-ddl.${eligibility.db.vendor.id}-${eligibility.db.driver.id}.properties</eligibility.domain.complete.ddl.properties.file>
				<eligibility.domain.complete.test.db.properties.file>${project.build.directory}/tool/hibernate/complete-test-db.${eligibility.db.vendor.id}-${eligibility.db.driver.id}.properties</eligibility.domain.complete.test.db.properties.file>
				<eligibility.domain.complete.seed.db.properties.file>${project.build.directory}/tool/hibernate/complete-seed-db.${eligibility.db.vendor.id}-${eligibility.db.driver.id}.properties</eligibility.domain.complete.seed.db.properties.file>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.novation</groupId>
					<artifactId>eligibility-hibernate-tools</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-complete-ddl</id>
								<phase>process-classes</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<classpathScope>test</classpathScope>
									<executable>java</executable>
									<arguments>
										<argument>-agentlib:jdwp=transport=dt_socket,server=y,address=1710,suspend=n</argument>
										<argument>-Dspring.profiles.active=dev,domain,hibernate,${eligibility.db.vendor.id},${eligibility.db.driver.id}</argument>
										<argument>-Dderby.stream.error.field=java.lang.System.out</argument>
										<argument>-classpath</argument>
										<classpath />
										<argument>com.novation.eligibility.hibernate.hbm2ddl.SchemaExport</argument>
										<argument>--quiet</argument>
										<argument>--text</argument>
										<argument>--create</argument>
										<argument>--format</argument>
										<argument>--output=${project.build.directory}/complete.hibernate-${eligibility.db.vendor.id}-${eligibility.db.driver.id}.ddl</argument>
										<argument>--properties=${eligibility.domain.complete.ddl.properties.file}</argument>
										<argument>--naming=org.hibernate.cfg.EJB3NamingStrategy</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>delete-test-db</id>
								<phase>process-classes</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<classpathScope>test</classpathScope>
									<executable>java</executable>
									<arguments>
										<argument>-agentlib:jdwp=transport=dt_socket,server=y,address=1710,suspend=n</argument>
										<argument>-Dspring.profiles.active=dev,domain,hibernate,${eligibility.db.vendor.id},${eligibility.db.driver.id}</argument>
										<argument>-Dderby.stream.error.field=java.lang.System.out</argument>
										<argument>-classpath</argument>
										<classpath />
										<argument>com.novation.eligibility.hibernate.hbm2ddl.SchemaExport</argument>
										<argument>--drop</argument>
										<argument>--properties=${eligibility.domain.complete.ddl.properties.file}</argument>
										<argument>--naming=org.hibernate.cfg.EJB3NamingStrategy</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>generate-complete-test-db</id>
								<phase>process-classes</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<classpathScope>test</classpathScope>
									<executable>java</executable>
									<arguments>
										<argument>-agentlib:jdwp=transport=dt_socket,server=y,address=1710,suspend=n</argument>
										<argument>-Dspring.profiles.active=dev,domain,hibernate,${eligibility.db.vendor.id},${eligibility.db.driver.id}</argument>
										<argument>-Dderby.stream.error.field=java.lang.System.out</argument>
										<argument>-classpath</argument>
										<classpath />
										<argument>com.novation.eligibility.hibernate.hbm2ddl.SchemaExport</argument>
										<argument>--create</argument>
										<argument>--properties=${eligibility.domain.complete.ddl.properties.file}</argument>
										<argument>--naming=org.hibernate.cfg.EJB3NamingStrategy</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>delete-seed-db</id>
								<phase>process-classes</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<classpathScope>test</classpathScope>
									<executable>java</executable>
									<arguments>
										<argument>-agentlib:jdwp=transport=dt_socket,server=y,address=1710,suspend=n</argument>
										<argument>-Dspring.profiles.active=dev,seed,hibernate,${eligibility.db.vendor.id},${eligibility.db.driver.id}</argument>
										<argument>-Dderby.stream.error.field=java.lang.System.out</argument>
										<argument>-classpath</argument>
										<classpath />
										<argument>com.novation.eligibility.hibernate.hbm2ddl.SchemaExport</argument>
										<argument>--drop</argument>
										<argument>--properties=${eligibility.domain.complete.ddl.properties.file}</argument>
										<argument>--naming=org.hibernate.cfg.EJB3NamingStrategy</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>generate-complete-seed-db</id>
								<phase>process-classes</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<classpathScope>test</classpathScope>
									<executable>java</executable>
									<arguments>
										<argument>-agentlib:jdwp=transport=dt_socket,server=y,address=1710,suspend=n</argument>
										<argument>-Dspring.profiles.active=dev,seed,hibernate,${eligibility.db.vendor.id},${eligibility.db.driver.id}</argument>
										<argument>-Dderby.stream.error.field=java.lang.System.out</argument>
										<argument>-classpath</argument>
										<classpath />
										<argument>com.novation.eligibility.hibernate.hbm2ddl.SchemaExport</argument>
										<argument>--create</argument>
										<argument>--properties=${eligibility.domain.complete.ddl.properties.file}</argument>
										<argument>--naming=org.hibernate.cfg.EJB3NamingStrategy</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<artifactId>eligibility-domain</artifactId>
	<packaging>jar</packaging>
	<name>Eligibility Domain Model</name>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>eligibility-support</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
		</dependency>
		<dependency>
			<groupId>${eligibility.msjdbc.groupId}</groupId>
			<artifactId>${eligibility.msjdbc.artifactId}</artifactId>
		</dependency>
		<dependency>
			<groupId>${eligibility.oracle.groupId}</groupId>
			<artifactId>${eligibility.oracle.artifactId}</artifactId>
		</dependency>
		<dependency>
			<groupId>com.novation</groupId>
			<artifactId>eligibility-datanucleus-rdbms-distro</artifactId>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.apache.bval</groupId>
			<artifactId>bval-jsr303</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.novation</groupId>
			<artifactId>eligibility-hibernate-distro</artifactId>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.mysema.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>eligibility-test-support</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
				<targetPath>${project.build.testOutputDirectory}</targetPath>
			</testResource>
			<testResource>
				<directory>${basedir}/../test-support/src/shared</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
				<targetPath>${project.build.testOutputDirectory}</targetPath>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-tool-resources</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/tool</outputDirectory>
							<resources>
								<resource>
									<directory>src/tool</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-test-resources</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/test/resources</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-shared-test-resources</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/../test-support/src/shared</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>process-classes</phase>
						<goals>
							<goal>jpa-export</goal>
						</goals>
						<configuration>
							<targetFolder>${project.build.directory}/generated-sources/java</targetFolder>
							<handleMethods>false</handleMethods>
							<packages>
								<package>eligibility.domain.model</package>
							</packages>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<!-- Plain, old integration tests -->
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<systemPropertyVariables>
								<spring.profiles.active>dev,domain,${eligibility.db.vendor.id},${eligibility.db.driver.id},${eligibility.persistence-api.impl.id}</spring.profiles.active>
								<derby.stream.error.field>java.lang.System.out</derby.stream.error.field>
							</systemPropertyVariables>
						</configuration>
					</execution>
					<execution>
						<!-- Integration test that seeds the database -->
						<id>seed-db</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/test/seed/**/*.java</include>
							</includes>
							<excludes>
								<exclude>**/test/integration/**/*.java</exclude>
								<exclude>**/test/unit/**/*.java</exclude>
							</excludes>
							<systemPropertyVariables>
								<spring.profiles.active>dev,seed,${eligibility.db.vendor.id},${eligibility.db.driver.id},${eligibility.persistence-api.impl.id}</spring.profiles.active>
								<derby.stream.error.field>java.lang.System.out</derby.stream.error.field>
							</systemPropertyVariables>
						</configuration>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.datanucleus
										</groupId>
										<artifactId>
											maven-datanucleus-plugin
										</artifactId>
										<versionRange>
											[3.0.2,)
										</versionRange>
										<goals>
											<goal>schema-create</goal>
											<goal>
												schema-deletecreate
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.mysema.maven
										</groupId>
										<artifactId>
											maven-apt-plugin
										</artifactId>
										<versionRange>
											[1.0.3,)
										</versionRange>
										<goals>
											<goal>process</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											sql-maven-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.2.1,)
										</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.mysema.maven
										</groupId>
										<artifactId>
											querydsl-maven-plugin
										</artifactId>
										<versionRange>
											[3.1.0,)
										</versionRange>
										<goals>
											<goal>jpa-export</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
